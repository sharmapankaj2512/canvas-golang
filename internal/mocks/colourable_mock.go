// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/pankaj/go/src/canvas/internal/domain/colourable.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockColorable is a mock of Colorable interface.
type MockColorable struct {
	ctrl     *gomock.Controller
	recorder *MockColorableMockRecorder
}

// MockColorableMockRecorder is the mock recorder for MockColorable.
type MockColorableMockRecorder struct {
	mock *MockColorable
}

// NewMockColorable creates a new mock instance.
func NewMockColorable(ctrl *gomock.Controller) *MockColorable {
	mock := &MockColorable{ctrl: ctrl}
	mock.recorder = &MockColorableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockColorable) EXPECT() *MockColorableMockRecorder {
	return m.recorder
}

// Color mocks base method.
func (m *MockColorable) Color(x, y int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Color", x, y)
	ret0, _ := ret[0].(error)
	return ret0
}

// Color indicates an expected call of Color.
func (mr *MockColorableMockRecorder) Color(x, y interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Color", reflect.TypeOf((*MockColorable)(nil).Color), x, y)
}
